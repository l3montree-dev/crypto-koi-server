# GraphQL schema example
#
# https://gqlgen.com/getting-started/

scalar Map
scalar Time


type GameStat {
    id: ID!
    type: String!
    score: Float
    cryptogotchiId: String!
    gameFinished: Time
    createdAt: Time!
    updatedAt: Time!
}

type Event {
  id: ID!
  type: String!
  payload: Float!
  # unix timestamp
  createdAt: Time!
  updatedAt: Time!
  cryptogotchiId: ID!
}

type Cryptogotchi {
  id: ID!
  isAlive: Boolean!
  name: String
  #affection: Float!
  #fun: Float!
  food: Float!
  minutesTillDeath: Float!
  maxLifetimeMinutes: Float!
  #funDrain: Float!
  #affectionDrain: Float!
  tokenId: String
  deathDate: Time
  ownerId: String!
  # unix timestamp
  createdAt: Time!
  updatedAt: Time!
  nextFeeding: Time!
  snapshotValid: Time!
}

type User {
    id: ID!
    name: String
    # at least an empty array is provided as default value
    cryptogotchies: [Cryptogotchi!]!
    createdAt: Time!
    updatedAt: Time!
}

type GameStartResponse {
    token: String!
}

type Mutation {
    # regular feed event
  feed(cryptogotchiId: ID!): Cryptogotchi!
  startGame(cryptogotchiId: ID!, gameType: String!): GameStartResponse!
  finishGame(token: String!, score: Float!): Cryptogotchi!
  changeCryptogotchiName(id: ID!, newName: String!): Cryptogotchi!
  changeUserName(newName: String!): User!
}

type Query {
    leaderboard(offset: Int!, limit: Int!): [Cryptogotchi!]!
    events(cryptogotchiId: ID!, offset: Int!, limit: Int!): [Event!]!
    cryptogotchi(cryptogotchiId: ID!): Cryptogotchi
    user: User!
}