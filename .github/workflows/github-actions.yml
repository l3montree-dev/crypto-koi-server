name: "Build, Test & Deploy"

on:
  workflow_dispatch:
    push:
    branches:
      - main

jobs:
  golang-test:
    runs-on: ubuntu-latest
    container: golang:1.18
    services:
      postgres:
        image: mysql:8
        env:
          MYSQL_PASSWORD: secret
          MYSQL_USER: billing
          MYSQL_DATABASE: billing
          MYSQL_ROOT_PASSWORD: secret
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Run tests
        run: |
          go test -v -coverpkg=./... -coverprofile=profile.cov ./...

      - name: Coverage
        run: |
          go tool cover -func profile.cov

  hardhat:
    runs-on: ubuntu-latest
    container: node:16
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Prepare
        run: |
          npm install

      - name: Hardhat test
        run: |
          npx hardhat test

  build:
    runs-on: ubuntu-latest
    needs: golang-test
    container: golang:1.18
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Build
        run: |
          go build -o crypto-koi-api ./cmd/crypto-koi-api

      - uses: actions/upload-artifact@v3
        with:
          name: Build-Artifact
          path: ./crypto-koi-api

  build-image:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1.2.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1.6.0
        id: buildx

      - name: Cache Docker layers
        uses: actions/cache@v2.1.7
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1.14.1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - name: Build images locally
        uses: docker/build-push-action@v2.9.0
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Dockerfile
          build-args: |
            VCS_REF=${{ github.sha }}
            VCS_VER=${{ github.ref }}
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:${{ steps.extract_branch.outputs.branch }}
            ghcr.io/${{ github.repository }}:${{ github.sha }}
          cache-from: type=local,src=/tmp/.buildx-cache
