image: golang:1.18

stages:
  - install
  - test
  - build
  - publish
  #- backup
  - deploy

npm:
  stage: install
  image: node:16
  artifacts:
    paths:
      - node_modules
  script:
    - npm i

golang:
  stage: test
  needs: []
  services:
    - mysql:8
  variables:
    MYSQL_PASSWORD: secret
    MYSQL_USER: billing
    MYSQL_DATABASE: billing
    MYSQL_ROOT_PASSWORD: secret
  script:
    - go test -v -coverpkg=./... -coverprofile=profile.cov ./...
    - go tool cover -func profile.cov

hardhat:
  stage: test
  image: node:16
  needs: ["npm"]
  script:
    - npx hardhat test

build:
  stage: build
  needs: ["golang"]
  artifacts:
    paths:
      - ./crypto-koi-api
  script:
    - go build -o crypto-koi-api ./cmd/crypto-koi-api

publish:
  image: docker:19.03.1
  stage: publish
  needs: ["build"]
  services:
    - docker:19.03.1-dind
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME
    DOCKER_TLS_CERTDIR: ""
    DOCKER_HOST: tcp://localhost:2375
  allow_failure: false
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull $IMAGE_TAG || true
    - docker build --cache-from $IMAGE_TAG -t $IMAGE_TAG .
    - docker push $IMAGE_TAG
  only:
    - main
    - dev
  
#production-backup:
#  stage: backup
#  image:
#    name: bitnami/kubectl:1.19.14
#    entrypoint: [""]
#  environment:
#    name: production
#    url: "https://l3montree.com"
#  script:
#    - echo "$K8S_CERTIFICATE" >> ca.pem
#    - kubectl --server=$K8S_API_URL --token=$K8S_TOKEN --certificate-authority=ca.pem --namespace=stamplab create job --from=cronjob/mysql-backup mysql-backup-pipeline-"$(tr -dc a-z0-9 </dev/urandom | head -c 20)"
#  only:
#    - master
#  when: manual

development:
  stage: deploy
  needs: ["publish"]
  image:
    name: bitnami/kubectl:1.19.14
    entrypoint: [""]
  environment:
    name: development
    url: "https://l3montree.com"
  script:
    - echo "$K8S_DEVELOPMENT_CERTIFICATE" >> ca.pem
    - kubectl --server=$K8S_DEVELOPMENT_API_URL --token=$K8S_DEVELOPMENT_TOKEN --certificate-authority=ca.pem --namespace=crypto-koi rollout restart deployment/crypto-koi-api
  only:
    - dev
  
production:
  stage: deploy
  needs: ["publish"]
  image:
    name: bitnami/kubectl:1.19.14
    entrypoint: [""]
  environment:
    name: production
    url: "https://l3montree.com"
  script:
    - echo "$K8S_CERTIFICATE" >> ca.pem
    - kubectl --server=$K8S_API_URL --token=$K8S_TOKEN --certificate-authority=ca.pem --namespace=crypto-koi rollout restart deployment/crypto-koi-api
  only:
    - main
  when: manual
